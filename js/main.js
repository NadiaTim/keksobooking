//Необходимое количество объявлений
const ADVERTS_COUNT = 10;

/**
 * Получение целого случайного числа в заданном диапозоне
 * @param {number} min - Минимальное значение диапазона (включительно)
 * @param {number} max - Максимальное значение диапазона (включительно)
 * @returns {number} Случайное целое число
 */
const getRandomInteger = (min, max) => {
  if (min < 0 || max < 0) {
    return -1;
  }

  if (max < min) {
    [min, max] = [max, min];
  }

  return Math.floor(Math.random() * (max - min + 1))+ min;
};

getRandomInteger(5, 8);

/**
 * Получение случайного числа из диапазона с несколькими занками после запятой
 * @param {number} min  - Минимальное значение диапазона (включительно)
 * @param {number} max - Максимальное значение диапазона (включительно)
 * @param {number} digits - Количество знаков после запятой (по умолчанию - 0)
 * @returns {number} число с плавающей точкой из заданного диапазона
 */
const getRundomFloat = (min, max, digits = 0) => {
  if (min < 0 || max < 0 || digits < 0) {
    return -1;
  }

  if (max < min) {
    [min, max] = [max, min];
  }

  return parseFloat((Math.random() * (max - min) + min).toFixed(digits));
};
getRundomFloat(4.499, 4.5, 3);

//объект-справочник типов мест

//объект-справочник времен заезда/выезда

//объект-справочник предоставляемых услуг





//функция уникальное двузначное число с ведущим нулем и проверкой на уникальность по другим объектам массива
//проверку на уникальность вынести

//функция формирования массива случайной длинны с уникальными ссылками на картинки
//проверку на уникальность вынести

//Функция формирования массива случайной длинны с значеними их объекта-справочника (без повторов)


//объект, описывающий автора
const author = {
  //уникальная ссылка на изображение
  //{{xx}} - уникальное двузначное значение с ведущим нулем
  avatar: 'img/avatars/user{{xx}}.png',
};

//функция создания объекта - автора
const createAuthor =() => {
  return {
    avatar: 'img/avatars/user' + '00' + '.png',
  };
}


//объект, содержащий информацию об объявлении
const offer = {
  //заголовок предложения
  //заполнение придумать самостоятельно
  title: '',

  //адрес предложения
  //строка с координатами x y [{{location.x}},{{location.y}}]
  //location.x - берутся из объекта c местоположением
  address: '',

  //стоимость
  //случайное целое положительное число
  //используем функцию определения целого случайного числа
  price: 1000,

  //тип места
  //одно из фиксированных значений
  //используем объект - справочник
  type: 'palace',

  //количество комнат
  //случайное целое положительное число
  //используем функцию определения целого случайного числа
  rooms: 2,

  //количество гостей, которое можно разместить
  //случайное целое положительное число
  //используем функцию определения целого случайного числа
  guests: 4,

  //время заезда
  //одно из фиксированных значений
  //используем объект - справочник
  checkin: '12:00',

  //время выезда
  //одно из фиксированных значений
  //используем объект - справочник
  checkout: '13:00',

  //предоставляемые услуги
  //массив случайной длинны из существующих значений
  //используем объект - справочник
  //массив заполняем функцией - рандомайзером
  //значения массив без повторов
  features: ['wifi', 'parking'],

  //описание помещения
  //придумать самостоятельно
  description: '',

  //фотографии предложения
  //массив случайной длинны с сылками на картинки
  photos: ['img1.jpg','img2.jpg'],
};

//объект - местоположение в виде географических координат
const location = {
  //широта
  //число с плавающей точкой от 35.65000 до 35.70000
  //вычисляем функцией для поиска часла с плавающей точкой в диапазоне
  x: 35.7598,

  //долгота
  //число с плавающей точкой от 139.70000 до 139.80000
  //вычисляем функцией для поиска часла с плавающей точкой в диапазоне
  y: 139.79999,

};





//функция создания общего объекта объявления
const createAdvert = () => {
  return {
    author: {},
    offer: {},
    location: {},
  }
};

//Определяем пустой массив объектов-объявлений с количеством элементов заявенных в константе ADVERTS_COUNT
// заполняем массив нулями
//перезаписываем в каждый элемент объявление, создаваемое функцией createAdvert
const adverts = new Array(ADVERTS_COUNT)
  .fill(null)
  .map(() => createAdvert());

//проверяем полученнный массив
console.log(adverts);
